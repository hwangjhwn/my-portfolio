{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hwangjihwan/Documents/GitHub/MyPortfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/hwangjihwan/Documents/GitHub/MyPortfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nimport router from '@/router';\nimport { useUserStore } from '@/stores/user';\nimport { requestToken } from '@/api/auth';\nimport { useTokenStore } from '@/stores/token';\nimport { useViewStore } from '@/stores/view';\naxios.defaults.baseURL = process.env.VUE_APP_API_URI;\n//axios.defaults.timeout = store.state.time.AXIOS_TIMEOUT; // 최대 10초\n\naxios.interceptors.request.use(\n// interceptor를 통해 백엔드 API로부터 받은 값을 먼저 처리함\nfunction (request) {\n  return request;\n}, function (error) {\n  // 2xx 외의 범위에 있는 상태코드는 여기에서 실행됨\n  console.log(error.response);\n  return error;\n});\naxios.interceptors.response.use(\n// interceptor를 통해 백엔드 API로부터 받은 값을 먼저 처리함\nfunction (response) {\n  var _response$data$error, _response$data$error2;\n  var userStore = useUserStore();\n  var tokenStore = useTokenStore();\n  var viewStore = useViewStore();\n  // 토큰 불일치 시 로그아웃\n  if (((_response$data$error = response.data.error) === null || _response$data$error === void 0 ? void 0 : _response$data$error.code) == 91) {\n    alert('다른 곳에서 로그인이 감지되어 로그아웃됩니다.');\n    userStore.setLogOut();\n    viewStore.setLoading(false);\n  }\n  // 토큰 만료 시 토큰 재발급\n  if (((_response$data$error2 = response.data.error) === null || _response$data$error2 === void 0 ? void 0 : _response$data$error2.code) == 97) {\n    return requestToken({\n      refresh_token: tokenStore.refresh_token\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(res) {\n        var newResponse;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tokenStore.setAccessToken(res.data.access_token);\n                // 중단된 요청을 재요청\n                response.config.headers = {\n                  authorization: res.data.access_token,\n                  ClientSecret: 'WeroU1wqXZF2zyr8H0U2pDAOOCetxKdJn2SsQpL3PrpkbJ4FWfOu3iEO15VfJNeI'\n                };\n                _context.next = 4;\n                return axios.request(response.config);\n              case 4:\n                newResponse = _context.sent;\n                viewStore.setLoading(false);\n                return _context.abrupt(\"return\", newResponse);\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      // refresh token 만료 시 로그아웃\n      if (err.code == 87) {\n        userStore.setLogOut();\n        viewStore.setLoading(false);\n        return {\n          data: {\n            success: false,\n            code: 87,\n            message: '세션이 만료되어 로그아웃합니다.'\n          }\n        };\n      }\n    });\n  } else {\n    return response;\n  }\n}, function (error) {\n  // 2xx 외의 범위에 있는 상태코드는 여기에서 실행됨\n  if (error.code === 'ERR_NETWORK') {\n    window.alert('네트워크 에러. 잠시 후 시도해주세요');\n  } else if (error.code === 'ERR_BAD_RESPONSE') {\n    window.alert('서버가 응답하지 않습니다. 잠시 후 시도해주세요');\n  } else if (error.code === 'ECONNABORTED') {\n    window.alert('요청시간을 초과했습니다. 잠시 후 시도해주세요');\n  } else if (error.code === 'ERR_BAD_REQUEST') {\n    window.alert('올바르지 않은 요청입니다. 잠시 후 시도해주세요');\n    //router.replace({ name: '404' });\n  } else {\n    window.alert(error.code);\n    // store.commit('toast/error', error.code);\n  }\n  // store.commit('spinnerOff');\n  console.log(error);\n  return error;\n});\nexport default axios;","map":{"version":3,"names":["axios","router","useUserStore","requestToken","useTokenStore","useViewStore","defaults","baseURL","process","env","VUE_APP_API_URI","interceptors","request","use","error","console","log","response","_response$data$error","_response$data$error2","userStore","tokenStore","viewStore","data","code","alert","setLogOut","setLoading","refresh_token","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","newResponse","wrap","_callee$","_context","prev","next","setAccessToken","access_token","config","headers","authorization","ClientSecret","sent","abrupt","stop","_x","apply","arguments","err","success","message","window"],"sources":["/Users/hwangjihwan/Documents/GitHub/MyPortfolio/src/plugins/axios.js"],"sourcesContent":["import axios from 'axios';\nimport router from '@/router';\nimport { useUserStore } from '@/stores/user';\nimport { requestToken } from '@/api/auth';\nimport { useTokenStore } from '@/stores/token';\nimport { useViewStore } from '@/stores/view';\n\naxios.defaults.baseURL = process.env.VUE_APP_API_URI;\n//axios.defaults.timeout = store.state.time.AXIOS_TIMEOUT; // 최대 10초\n\naxios.interceptors.request.use(\n\t// interceptor를 통해 백엔드 API로부터 받은 값을 먼저 처리함\n\t(request) => {\n\t\treturn request;\n\t},\n\t(error) => {\n\t\t// 2xx 외의 범위에 있는 상태코드는 여기에서 실행됨\n\t\tconsole.log(error.response);\n\t\treturn error;\n\t},\n);\n\naxios.interceptors.response.use(\n\t// interceptor를 통해 백엔드 API로부터 받은 값을 먼저 처리함\n\t(response) => {\n\t\tconst userStore = useUserStore();\n\t\tconst tokenStore = useTokenStore();\n\t\tconst viewStore = useViewStore();\n\t\t// 토큰 불일치 시 로그아웃\n\t\tif (response.data.error?.code == 91) {\n\t\t\talert('다른 곳에서 로그인이 감지되어 로그아웃됩니다.');\n\t\t\tuserStore.setLogOut();\n\t\t\tviewStore.setLoading(false);\n\t\t}\n\t\t// 토큰 만료 시 토큰 재발급\n\t\tif (response.data.error?.code == 97) {\n\t\t\treturn requestToken({ refresh_token: tokenStore.refresh_token })\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\ttokenStore.setAccessToken(res.data.access_token);\n\t\t\t\t\t// 중단된 요청을 재요청\n\t\t\t\t\tresponse.config.headers = {\n\t\t\t\t\t\tauthorization: res.data.access_token,\n\t\t\t\t\t\tClientSecret: 'WeroU1wqXZF2zyr8H0U2pDAOOCetxKdJn2SsQpL3PrpkbJ4FWfOu3iEO15VfJNeI',\n\t\t\t\t\t};\n\t\t\t\t\tconst newResponse = await axios.request(response.config);\n\t\t\t\t\tviewStore.setLoading(false);\n\t\t\t\t\treturn newResponse;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// refresh token 만료 시 로그아웃\n\t\t\t\t\tif (err.code == 87) {\n\t\t\t\t\t\tuserStore.setLogOut();\n\t\t\t\t\t\tviewStore.setLoading(false);\n\t\t\t\t\t\treturn { data: { success: false, code: 87, message: '세션이 만료되어 로그아웃합니다.' } };\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn response;\n\t\t}\n\t},\n\t(error) => {\n\t\t// 2xx 외의 범위에 있는 상태코드는 여기에서 실행됨\n\t\tif (error.code === 'ERR_NETWORK') {\n\t\t\twindow.alert('네트워크 에러. 잠시 후 시도해주세요');\n\t\t} else if (error.code === 'ERR_BAD_RESPONSE') {\n\t\t\twindow.alert('서버가 응답하지 않습니다. 잠시 후 시도해주세요');\n\t\t} else if (error.code === 'ECONNABORTED') {\n\t\t\twindow.alert('요청시간을 초과했습니다. 잠시 후 시도해주세요');\n\t\t} else if (error.code === 'ERR_BAD_REQUEST') {\n\t\t\twindow.alert('올바르지 않은 요청입니다. 잠시 후 시도해주세요');\n\t\t\t//router.replace({ name: '404' });\n\t\t} else {\n\t\t\twindow.alert(error.code);\n\t\t\t// store.commit('toast/error', error.code);\n\t\t}\n\t\t// store.commit('spinnerOff');\n\t\tconsole.log(error);\n\t\treturn error;\n\t},\n);\n\nexport default axios;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}