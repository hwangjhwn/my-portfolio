{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport dayjs from 'dayjs';\n\n// input 에 전화번호 입력할 때 자동으로 하이픈(-)넣어주는 기능\nexport var autoContactDash = function autoContactDash(e) {\n  //e.target.value = e.target.value\n  //\t.replace(/[^0-9]/g, '') // 숫자만 입력 받기\n  //\t.replace(/^(\\d{0,3})(\\d{0,4})(\\d{0,4})$/g, '$1-$2-$3') // 3자리,4자리,4자리로 끊고 -로 구분하기\n  //\t.replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n  //const val = e.target.value.replace(/[^0-9]*/s, ''); //숫자이외 제거\n  //if (val.substring(0, 2) == '02') {\n  //\te.target.value = e.target.value.replace(/[^0-9]/g, '').replace(/([0-9]{2})([0-9]{3,4})([0-9]{4})$/g, '$1-$2-$3');\n  //} else if (\n  //\tval.substring(0, 2) == '8' ||\n  //\tval.substring(0, 2) == '15' ||\n  //\tval.substring(0, 2) == '16' ||\n  //\tval.substring(0, 2) == '18'\n  //) {\n  //\te.target.value = e.target.value.replace(/[^0-9]/g, '').replace(/([0-9]{4})([0-9]{4})$/g, '$1-$2');\n  //} else {\n  //\te.target.value = e.target.value\n  //\t\t.replace(/[^0-9]/g, '')\n  //\t\t.replace(/^(\\d{0,3})(\\d{0,4})(\\d{0,4})$/g, '$1-$2-$3')\n  //\t\t.replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n  //}\n};\n\n// 전화번호 사이에 -(dash) 넣어주는 유틸 함수\nexport var contactDash = function contactDash(phoneNum) {\n  if (typeof phoneNum !== 'string') return;\n  var val = phoneNum.replace(/[^0-9]*/, ''); //숫자이외 제거\n  if (val.substring(0, 2) == '02') {\n    return phoneNum.replace(/[^0-9]/g, '').replace(/([0-9]{2})([0-9]{3,4})([0-9]{4})$/g, '$1-$2-$3');\n  } else if (val.substring(0, 2) == '8' || val.substring(0, 2) == '15' || val.substring(0, 2) == '16' || val.substring(0, 2) == '18') {\n    return phoneNum.replace(/[^0-9]/g, '').replace(/([0-9]{4})([0-9]{4})$/g, '$1-$2');\n  } else {\n    return phoneNum.replace(/[^0-9]/g, '').replace(/([0-9]{3})([0-9]{3,4})([0-9]{4})$/g, '$1-$2-$3').replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n  }\n};\n\nexport var bizDash = function bizDash(bizNumber) {\n  if (typeof bizNumber !== 'string') return;\n  {\n    return bizNumber.replace(/[^0-9]/g, '').replace(/([0-9]{3})([0-9]{2})([0-9]{5})$/g, '$1-$2-$3').replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n  }\n};\n\nexport var priceFormat = function priceFormat(num) {\n  if (typeof num === 'number') {\n    return new Intl.NumberFormat().format(num);\n  } else if (typeof num === 'string') {\n    return num;\n  } else {\n    return '-';\n  }\n};\nexport var dateFormat = function dateFormat(date) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var lang = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'KOR';\n  // type : 'HHmm' | 'HHmmss'\n  if (!date) {\n    return '-';\n  }\n  if (type === 'HHmm') {\n    if (lang === 'KOR') {\n      return dayjs(date).format('YYYY년 M월 D일 H시 m분');\n    }\n    return dayjs(date).format('YYYY. MM. DD HH:mm');\n  } else if (type === 'HHmmss') {\n    return dayjs(date).format('YYYY. MM. DD HH:mm:ss');\n  } else {\n    if (lang === 'KOR') {\n      return dayjs(date).format('YYYY년 M월 D일');\n    }\n    return dayjs(date).format('YYYY. MM. DD');\n  }\n};","map":{"version":3,"names":["dayjs","autoContactDash","e","contactDash","phoneNum","val","replace","substring","bizDash","bizNumber","priceFormat","num","Intl","NumberFormat","format","dateFormat","date","type","arguments","length","undefined","lang"],"sources":["/Users/hwangjihwan/Documents/GitHub/MyPortfolio/src/composables/format.js"],"sourcesContent":["import dayjs from 'dayjs';\n\n// input 에 전화번호 입력할 때 자동으로 하이픈(-)넣어주는 기능\nexport const autoContactDash = (e) => {\n\t//e.target.value = e.target.value\n\t//\t.replace(/[^0-9]/g, '') // 숫자만 입력 받기\n\t//\t.replace(/^(\\d{0,3})(\\d{0,4})(\\d{0,4})$/g, '$1-$2-$3') // 3자리,4자리,4자리로 끊고 -로 구분하기\n\t//\t.replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n\t//const val = e.target.value.replace(/[^0-9]*/s, ''); //숫자이외 제거\n\t//if (val.substring(0, 2) == '02') {\n\t//\te.target.value = e.target.value.replace(/[^0-9]/g, '').replace(/([0-9]{2})([0-9]{3,4})([0-9]{4})$/g, '$1-$2-$3');\n\t//} else if (\n\t//\tval.substring(0, 2) == '8' ||\n\t//\tval.substring(0, 2) == '15' ||\n\t//\tval.substring(0, 2) == '16' ||\n\t//\tval.substring(0, 2) == '18'\n\t//) {\n\t//\te.target.value = e.target.value.replace(/[^0-9]/g, '').replace(/([0-9]{4})([0-9]{4})$/g, '$1-$2');\n\t//} else {\n\t//\te.target.value = e.target.value\n\t//\t\t.replace(/[^0-9]/g, '')\n\t//\t\t.replace(/^(\\d{0,3})(\\d{0,4})(\\d{0,4})$/g, '$1-$2-$3')\n\t//\t\t.replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n\t//}\n};\n\n// 전화번호 사이에 -(dash) 넣어주는 유틸 함수\nexport const contactDash = (phoneNum) => {\n\tif (typeof phoneNum !== 'string') return;\n\n\tconst val = phoneNum.replace(/[^0-9]*/s, ''); //숫자이외 제거\n\tif (val.substring(0, 2) == '02') {\n\t\treturn phoneNum.replace(/[^0-9]/g, '').replace(/([0-9]{2})([0-9]{3,4})([0-9]{4})$/g, '$1-$2-$3');\n\t} else if (\n\t\tval.substring(0, 2) == '8' ||\n\t\tval.substring(0, 2) == '15' ||\n\t\tval.substring(0, 2) == '16' ||\n\t\tval.substring(0, 2) == '18'\n\t) {\n\t\treturn phoneNum.replace(/[^0-9]/g, '').replace(/([0-9]{4})([0-9]{4})$/g, '$1-$2');\n\t} else {\n\t\treturn phoneNum\n\t\t\t.replace(/[^0-9]/g, '')\n\t\t\t.replace(/([0-9]{3})([0-9]{3,4})([0-9]{4})$/g, '$1-$2-$3')\n\t\t\t.replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n\t}\n};\n\nexport const bizDash = (bizNumber) => {\n\tif (typeof bizNumber !== 'string') return;\n\n\t{\n\t\treturn bizNumber\n\t\t\t.replace(/[^0-9]/g, '')\n\t\t\t.replace(/([0-9]{3})([0-9]{2})([0-9]{5})$/g, '$1-$2-$3')\n\t\t\t.replace(/(\\-{1,2})$/g, ''); //eslint-disable-line\n\t}\n};\n\nexport const priceFormat = (num) => {\n\tif (typeof num === 'number') {\n\t\treturn new Intl.NumberFormat().format(num);\n\t} else if (typeof num === 'string') {\n\t\treturn num;\n\t} else {\n\t\treturn '-';\n\t}\n};\n\nexport const dateFormat = (date, type = undefined, lang = 'KOR') => {\n\t// type : 'HHmm' | 'HHmmss'\n\tif (!date) {\n\t\treturn '-';\n\t}\n\n\tif (type === 'HHmm') {\n\t\tif (lang === 'KOR') {\n\t\t\treturn dayjs(date).format('YYYY년 M월 D일 H시 m분');\n\t\t}\n\t\treturn dayjs(date).format('YYYY. MM. DD HH:mm');\n\t} else if (type === 'HHmmss') {\n\t\treturn dayjs(date).format('YYYY. MM. DD HH:mm:ss');\n\t} else {\n\t\tif (lang === 'KOR') {\n\t\t\treturn dayjs(date).format('YYYY년 M월 D일');\n\t\t}\n\t\treturn dayjs(date).format('YYYY. MM. DD');\n\t}\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,CAAC,EAAK;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACA;;AAED;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,QAAQ,EAAK;EACxC,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;EAElC,IAAMC,GAAG,GAAGD,QAAQ,CAACE,OAAO,CAAC,SAAU,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9C,IAAID,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE;IAChC,OAAOH,QAAQ,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,oCAAoC,EAAE,UAAU,CAAC;EACjG,CAAC,MAAM,IACND,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAC1BF,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,IAC3BF,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,IAC3BF,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAC1B;IACD,OAAOH,QAAQ,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,wBAAwB,EAAE,OAAO,CAAC;EAClF,CAAC,MAAM;IACN,OAAOF,QAAQ,CACbE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtBA,OAAO,CAAC,oCAAoC,EAAE,UAAU,CAAC,CACzDA,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;EAC/B;AACD,CAAC;;AAED,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAIC,SAAS,EAAK;EACrC,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;EAEnC;IACC,OAAOA,SAAS,CACdH,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtBA,OAAO,CAAC,kCAAkC,EAAE,UAAU,CAAC,CACvDA,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;EAC/B;AACD,CAAC;;AAED,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAIC,GAAG,EAAK;EACnC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC5B,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,CAAC,CAACC,MAAM,CAACH,GAAG,CAAC;EAC3C,CAAC,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACnC,OAAOA,GAAG;EACX,CAAC,MAAM;IACN,OAAO,GAAG;EACX;AACD,CAAC;AAED,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAqC;EAAA,IAAnCC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EAAA,IAAEC,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC9D;EACA,IAAI,CAACF,IAAI,EAAE;IACV,OAAO,GAAG;EACX;EAEA,IAAIC,IAAI,KAAK,MAAM,EAAE;IACpB,IAAII,IAAI,KAAK,KAAK,EAAE;MACnB,OAAOrB,KAAK,CAACgB,IAAI,CAAC,CAACF,MAAM,CAAC,mBAAmB,CAAC;IAC/C;IACA,OAAOd,KAAK,CAACgB,IAAI,CAAC,CAACF,MAAM,CAAC,oBAAoB,CAAC;EAChD,CAAC,MAAM,IAAIG,IAAI,KAAK,QAAQ,EAAE;IAC7B,OAAOjB,KAAK,CAACgB,IAAI,CAAC,CAACF,MAAM,CAAC,uBAAuB,CAAC;EACnD,CAAC,MAAM;IACN,IAAIO,IAAI,KAAK,KAAK,EAAE;MACnB,OAAOrB,KAAK,CAACgB,IAAI,CAAC,CAACF,MAAM,CAAC,aAAa,CAAC;IACzC;IACA,OAAOd,KAAK,CAACgB,IAAI,CAAC,CAACF,MAAM,CAAC,cAAc,CAAC;EAC1C;AACD,CAAC"},"metadata":{},"sourceType":"module"}