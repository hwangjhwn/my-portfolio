{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport { autoContactDash, bizDash, contactDash, priceFormat } from '@/composables/format';\nvar numberonly = function numberonly(el) {\n  // <input v-numberonly>\n  // 숫자만 입력받고, 문자는 입력받지 않음\n  el.addEventListener('input', function (e) {\n    e.target.value = e.target.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\n  });\n};\nvar firstDemical = function firstDemical(el) {\n  // <input v-firstDemical>\n  // 숫자만 입력받고, 소수점 첫째 자리까지만 입력받음\n  el.addEventListener('input', function (e) {\n    var rep = /^[\\d]*\\.?[\\d]{0,1}$/;\n    if (!rep.test(e.target.value)) {\n      e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n    }\n    return;\n  });\n};\nvar secondDemical = function secondDemical(el) {\n  // <input v-secondDemical>\n  // 숫자만 입력받고, 소수점 둘째 자리까지만 입력받음\n  el.addEventListener('input', function (e) {\n    var rep = /^[\\d]*\\.?[\\d]{0,2}$/;\n    if (!rep.test(e.target.value)) {\n      e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n    }\n    return;\n  });\n};\nvar price = function price(el) {\n  // <span v-price>\n  // <input v-price>\n  // 3자리 단위로 숫자 사이에 ,찍음\n  var tagName = el.tagName;\n  if (tagName === 'INPUT') {\n    el.addEventListener('input', function (e) {\n      e.target.value = priceFormat(e.target.value.replaceAll(',', ''));\n    });\n  } else {\n    el.textContent = priceFormat(el.textContent);\n  }\n};\nvar contact = function contact(el) {\n  // <input v-contact>\n  // <span v-contact>\n  // 전화번호 사이에 - 찍음\n  var tagName = el.tagName;\n  if (tagName === 'INPUT') {\n    el.addEventListener('input', function (e) {\n      e.target.value = contactDash(e.target.value);\n    });\n  } else {\n    el.textContent = contactDash(el.textContent);\n  }\n};\nvar bizNum = function bizNum(el) {\n  // 사업자번호 3-2-5 자리로 구분\n  var tagName = el.tagName;\n  if (tagName === 'INPUT') {\n    el.addEventListener('input', function (e) {\n      e.target.value = bizDash(e.target.value);\n    });\n  } else {\n    el.textContent = bizDash(el.textContent);\n  }\n};\n\n//const date = (el, binding) => {\n//\t// <span v-date:\"'YMD'\">\n//\t// <span v-date:\"'YMDHm'\">\n//\t// <span v-date=\"'YMDHmS'\">\n//\t// 날짜 형식으로 변환함\n//\t// el이 'YYYY-MM-DD HH:mm:SS' 형태로 들어올 것이라고 전제함\n//\tif (el.textContent === '') return; // fetch Delay 동안에 빈 내용 무시\n//\tconst splited = el.textContent.split(' ');\n//\tlet [YMD, HMS] = splited;\n\n//\tlet res;\n//\t// prettier-ignore\n//\tswitch (binding.value) {\n//\t\t\tcase 'YMD':\n//\t\t\t\tres =\n//\t\t\t\t\tYMD.replace('-', '년 ').replace('-', '월 ').concat('일');\n//\t\t\t\tbreak;\n//\t\t\tcase 'YMDHm':\n//\t\t\t\tHMS = HMS.slice(0,6);\n//\t\t\t\tres =\n//\t\t\t\t\tYMD.replace('-', '년 ').replace('-', '월 ').concat('일')\n//\t\t\t\t\t+ ' '\n//\t\t\t\t\t+ HMS.replace(':', '시 ').replace(':', '분 ');\n//\t\t\t\t\tbreak;\n//\t\t\tcase 'YMDHmS':\n//\t\t\t\tres =\n//\t\t\t\t\tYMD.replace('-', '년 ').replace('-', '월 ').concat('일')\n//\t\t\t\t\t+ ' '\n//\t\t\t\t\t+ HMS.replace(':', '시 ').replace(':', '분 ')\n//\t\t\t\t\t+ '초'\n//\t\t}\n//\tel.textContent = res;\n//};\n\nexport { numberonly, price, contact, bizNum, firstDemical, secondDemical };","map":{"version":3,"names":["autoContactDash","bizDash","contactDash","priceFormat","numberonly","el","addEventListener","e","target","value","replace","firstDemical","rep","test","substring","length","secondDemical","price","tagName","replaceAll","textContent","contact","bizNum"],"sources":["/Users/hwangjihwan/Documents/GitHub/MyPortfolio/src/directives/format.js"],"sourcesContent":["import { autoContactDash, bizDash, contactDash, priceFormat } from '@/composables/format';\n\nconst numberonly = (el) => {\n\t// <input v-numberonly>\n\t// 숫자만 입력받고, 문자는 입력받지 않음\n\tel.addEventListener('input', (e) => {\n\t\te.target.value = e.target.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\n\t});\n};\n\nconst firstDemical = (el) => {\n\t// <input v-firstDemical>\n\t// 숫자만 입력받고, 소수점 첫째 자리까지만 입력받음\n\tel.addEventListener('input', (e) => {\n\t\tconst rep = /^[\\d]*\\.?[\\d]{0,1}$/;\n\t\tif (!rep.test(e.target.value)) {\n\t\t\te.target.value = e.target.value.substring(0, e.target.value.length - 1);\n\t\t}\n\t\treturn;\n\t});\n};\n\nconst secondDemical = (el) => {\n\t// <input v-secondDemical>\n\t// 숫자만 입력받고, 소수점 둘째 자리까지만 입력받음\n\tel.addEventListener('input', (e) => {\n\t\tconst rep = /^[\\d]*\\.?[\\d]{0,2}$/;\n\t\tif (!rep.test(e.target.value)) {\n\t\t\te.target.value = e.target.value.substring(0, e.target.value.length - 1);\n\t\t}\n\t\treturn;\n\t});\n};\n\nconst price = (el) => {\n\t// <span v-price>\n\t// <input v-price>\n\t// 3자리 단위로 숫자 사이에 ,찍음\n\tconst tagName = el.tagName;\n\tif (tagName === 'INPUT') {\n\t\tel.addEventListener('input', (e) => {\n\t\t\te.target.value = priceFormat(e.target.value.replaceAll(',', ''));\n\t\t});\n\t} else {\n\t\tel.textContent = priceFormat(el.textContent);\n\t}\n};\n\nconst contact = (el) => {\n\t// <input v-contact>\n\t// <span v-contact>\n\t// 전화번호 사이에 - 찍음\n\tconst tagName = el.tagName;\n\tif (tagName === 'INPUT') {\n\t\tel.addEventListener('input', (e) => {\n\t\t\te.target.value = contactDash(e.target.value);\n\t\t});\n\t} else {\n\t\tel.textContent = contactDash(el.textContent);\n\t}\n};\n\nconst bizNum = (el) => {\n\t// 사업자번호 3-2-5 자리로 구분\n\tconst tagName = el.tagName;\n\tif (tagName === 'INPUT') {\n\t\tel.addEventListener('input', (e) => {\n\t\t\te.target.value = bizDash(e.target.value);\n\t\t});\n\t} else {\n\t\tel.textContent = bizDash(el.textContent);\n\t}\n};\n\n//const date = (el, binding) => {\n//\t// <span v-date:\"'YMD'\">\n//\t// <span v-date:\"'YMDHm'\">\n//\t// <span v-date=\"'YMDHmS'\">\n//\t// 날짜 형식으로 변환함\n//\t// el이 'YYYY-MM-DD HH:mm:SS' 형태로 들어올 것이라고 전제함\n//\tif (el.textContent === '') return; // fetch Delay 동안에 빈 내용 무시\n//\tconst splited = el.textContent.split(' ');\n//\tlet [YMD, HMS] = splited;\n\n//\tlet res;\n//\t// prettier-ignore\n//\tswitch (binding.value) {\n//\t\t\tcase 'YMD':\n//\t\t\t\tres =\n//\t\t\t\t\tYMD.replace('-', '년 ').replace('-', '월 ').concat('일');\n//\t\t\t\tbreak;\n//\t\t\tcase 'YMDHm':\n//\t\t\t\tHMS = HMS.slice(0,6);\n//\t\t\t\tres =\n//\t\t\t\t\tYMD.replace('-', '년 ').replace('-', '월 ').concat('일')\n//\t\t\t\t\t+ ' '\n//\t\t\t\t\t+ HMS.replace(':', '시 ').replace(':', '분 ');\n//\t\t\t\t\tbreak;\n//\t\t\tcase 'YMDHmS':\n//\t\t\t\tres =\n//\t\t\t\t\tYMD.replace('-', '년 ').replace('-', '월 ').concat('일')\n//\t\t\t\t\t+ ' '\n//\t\t\t\t\t+ HMS.replace(':', '시 ').replace(':', '분 ')\n//\t\t\t\t\t+ '초'\n//\t\t}\n//\tel.textContent = res;\n//};\n\nexport { numberonly, price, contact, bizNum, firstDemical, secondDemical };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}